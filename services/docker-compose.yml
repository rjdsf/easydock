version: "3.8"

services:
    nginx-proxy:
        container_name: nginx-proxy
        image: jwilder/nginx-proxy
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            # - ./proxy/vhost:/etc/nginx/vhost.d:ro       #when we want to use Per-VIRTUAL_HOST configuration
            - ./proxy/certs:/etc/nginx/certs:ro           # If not using ssl comment this out 
        networks:
            - docker-default-network
            - docker-wpdev-network
    redis:
        container_name: redis
        image: redis
        restart: unless-stopped
        ports:
            - 6379:6379
        volumes:
            - ./redis/redis.conf:/redis.conf:delegated
        command: [ "redis-server", "/redis.conf" ]
        networks:
            - docker-default-network
            - docker-wpdev-network
    redis-commander:
        container_name: redis-commander
        hostname: redis-commander
        image: rediscommander/redis-commander:latest
        environment:
        - REDIS_HOSTS=local:redis:6379
        ports:
        - 8081:8081
        networks:
            - docker-default-network
            - docker-wpdev-network
    mariadb:
        container_name: mariadb
        image: mariadb
        restart: unless-stopped
        ports:
            - 3306:3306
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=User123
            - MYSQL_PASSWORD=Admin123
        volumes:
            - ./mariadb/mysql:/var/lib/mysql:delegated
        networks:
            - docker-default-network
            - docker-wpdev-network
    dozzle:
        container_name: dozzle
        image: amir20/dozzle:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 9999:8080
networks:
    docker-wpdev-network:
        external: true
    docker-default-network:
        external: true